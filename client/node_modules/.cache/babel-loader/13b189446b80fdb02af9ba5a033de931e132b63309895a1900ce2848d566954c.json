{"ast":null,"code":"const Reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: true\n      };\n    case \"UPDATE_START\":\n      return {\n        ...state,\n        isFetching: true\n      };\n    case \"UPDATE_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n    case \"UPDATE_FAILURE\":\n      return {\n        user: state.user,\n        isFetching: false,\n        error: true\n      };\n    case \"LOGOUT\":\n      return {\n        user: null,\n        isFetching: false,\n        error: false\n      };\n    default:\n      return state;\n  }\n};\n_c = Reducer;\nexport default Reducer;\nvar _c;\n$RefreshReg$(_c, \"Reducer\");","map":{"version":3,"names":["Reducer","state","action","type","user","isFetching","error","payload"],"sources":["/home/rehan/javascript/javascript-intermediate/node/mern-stack-blog/client/src/context/Reducer.js"],"sourcesContent":["const Reducer = (state, action) =>{\n    switch(action.type){\n        case \"LOGIN_START\":\n            return{\n                user:null,\n                isFetching:true,\n                error:false,\n            };\n        case \"LOGIN_SUCCESS\":\n            return{\n                user:action.payload,\n                isFetching:false,\n                error:false,\n            };\n        case \"LOGIN_FAILURE\":\n            return{\n                user:null,\n                isFetching:false,\n                error:true,\n            };\n        case \"UPDATE_START\":\n            return{\n                ...state,\n                isFetching:true\n            };\n        case \"UPDATE_SUCCESS\":\n            return{\n                user:action.payload,\n                isFetching:false,\n                error:false,\n            };\n        case \"UPDATE_FAILURE\":\n            return{\n                user: state.user,\n                isFetching:false,\n                error:true,\n            };\n        case \"LOGOUT\":\n            return{\n                user:null,\n                isFetching:false,\n                error:false,\n            };\n        default:\n            return state;\n\n    }\n}\n\nexport default Reducer;"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAI;EAC9B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,aAAa;MACd,OAAM;QACFC,IAAI,EAAC,IAAI;QACTC,UAAU,EAAC,IAAI;QACfC,KAAK,EAAC;MACV,CAAC;IACL,KAAK,eAAe;MAChB,OAAM;QACFF,IAAI,EAACF,MAAM,CAACK,OAAO;QACnBF,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACL,KAAK,eAAe;MAChB,OAAM;QACFF,IAAI,EAAC,IAAI;QACTC,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACL,KAAK,cAAc;MACf,OAAM;QACF,GAAGL,KAAK;QACRI,UAAU,EAAC;MACf,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAM;QACFD,IAAI,EAACF,MAAM,CAACK,OAAO;QACnBF,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACL,KAAK,gBAAgB;MACjB,OAAM;QACFF,IAAI,EAAEH,KAAK,CAACG,IAAI;QAChBC,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACL,KAAK,QAAQ;MACT,OAAM;QACFF,IAAI,EAAC,IAAI;QACTC,UAAU,EAAC,KAAK;QAChBC,KAAK,EAAC;MACV,CAAC;IACL;MACI,OAAOL,KAAK;EAAC;AAGzB,CAAC;AAAA,KA/CKD,OAAO;AAiDb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}